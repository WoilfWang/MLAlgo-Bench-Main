Implement the huber regressor with python, numpy and scipy. 
L2-regularized linear regression model that is robust to outliers. The Huber Regressor optimizes the squared loss for the samples where `|(y - Xw - c) / sigma| < epsilon` and the absolute loss for the samples where `|(y - Xw - c) / sigma| > epsilon`, where the model coefficients `w`, the intercept `c` and the scale `sigma` are parameters to be optimized. The parameter sigma makes sure that if y is scaled up or down by a certain factor, one does not need to rescale epsilon to achieve the same robustness. Note that this does not take into account the fact that the different features of X may be of different scales. The Huber loss function has the advantage of not being heavily influenced by the outliers while not completely ignoring their effect.  

The module should be named GPTHuberRegressor.  
The init function should include the following parameters:
epsilon: The parameter epsilon controls the number of samples that should be classified as outliers. The smaller the epsilon, the more robust it is to outliers;
max_iter: Maximum number of iterations that scipy.optimize.minimize(method="L-BFGS-B") should run for;
alpha: Strength of the squared L2 regularization.
The module must contain a fit function and a predict function. The fit function is used to fit the training data, and the predict function is used to predict the labels for the given features.  
The fit function accepts X_train, y_train as input and return None where  
X_train: the features of the train data, which is a numpy array, and the shape of X_train is [N, d]. N is the number of the train data and d is the dimension.  
y_train: the labels pf the train data,which is a numpy array.  
The predict function accepts X_test as input and return predictions where  
X_test: the features of the test data, which is a numpy array, and the shape of X_train is [N, d]. N is the number of the test data and d is the dimension.  
predctions: the predicted labels for X_test, which is a numpy arrary.  
You should just return the code for the module, don't return anything else.